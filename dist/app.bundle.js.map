{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://development/webpack/runtime/async module","webpack://development/./src/general.css","webpack://development/./node_modules/css-loader/dist/runtime/api.js","webpack://development/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://development/./src/general.css?063c","webpack://development/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://development/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://development/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://development/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://development/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://development/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://development/./src/GUI.js","webpack://development/./src/icons.js","webpack://development/./src/index.js","webpack://development/./src/logic.js","webpack://development/./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://development/./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://development/./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://development/./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://development/./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://development/./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://development/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://development/./node_modules/date-fns/locale/en-US.js","webpack://development/./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://development/./node_modules/date-fns/locale/en-US/_lib/match.js","webpack://development/./node_modules/date-fns/_lib/defaultOptions.js","webpack://development/./node_modules/date-fns/constants.js","webpack://development/./node_modules/date-fns/constructFrom.js","webpack://development/./node_modules/date-fns/toDate.js","webpack://development/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://development/./node_modules/date-fns/startOfDay.js","webpack://development/./node_modules/date-fns/getDayOfYear.js","webpack://development/./node_modules/date-fns/differenceInCalendarDays.js","webpack://development/./node_modules/date-fns/_lib/normalizeDates.js","webpack://development/./node_modules/date-fns/startOfYear.js","webpack://development/./node_modules/date-fns/startOfWeek.js","webpack://development/./node_modules/date-fns/startOfISOWeek.js","webpack://development/./node_modules/date-fns/getISOWeekYear.js","webpack://development/./node_modules/date-fns/getISOWeek.js","webpack://development/./node_modules/date-fns/startOfISOWeekYear.js","webpack://development/./node_modules/date-fns/getWeekYear.js","webpack://development/./node_modules/date-fns/getWeek.js","webpack://development/./node_modules/date-fns/startOfWeekYear.js","webpack://development/./node_modules/date-fns/_lib/addLeadingZeros.js","webpack://development/./node_modules/date-fns/_lib/format/lightFormatters.js","webpack://development/./node_modules/date-fns/_lib/format/formatters.js","webpack://development/./node_modules/date-fns/_lib/format/longFormatters.js","webpack://development/./node_modules/date-fns/_lib/protectedTokens.js","webpack://development/./node_modules/date-fns/isValid.js","webpack://development/./node_modules/date-fns/isDate.js","webpack://development/./node_modules/date-fns/format.js","webpack://development/webpack/bootstrap","webpack://development/webpack/runtime/compat get default export","webpack://development/webpack/runtime/define property getters","webpack://development/webpack/runtime/global","webpack://development/webpack/runtime/hasOwnProperty shorthand","webpack://development/webpack/runtime/publicPath","webpack://development/webpack/runtime/nonce","webpack://development/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body,\nh1,\nh2,\nh3,\np {\n  margin: 0;\n  padding: 0;\n  font-family: Arial, Helvetica, sans-serif;\n}\n\nbody {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.SearchBarDiv {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 10vh;\n}\n\n/* the form itself */\n.SearchBarDiv > form {\n  min-width: 50%;\n  display: flex;\n  justify-content: space-around;\n}\n\n#searchBar {\n  flex: 1;\n  max-width: 70%;\n  padding: 0.5rem;\n  border-radius: 8px;\n  border: solid 2px black;\n  min-width: 300px;\n  transition: transform 0.3s ease;\n}\n\n#submitBtn {\n  cursor: pointer;\n  border: solid 2px black;\n  background-color: #fff;\n  border-radius: 6px;\n  padding: 0;\n  margin: 0;\n  min-height: 2.25rem;\n  min-width: 2.25rem;\n  display: flex;\n  justify-content: center;\n  transition:\n    transform 0.3s ease,\n    background-color 0.3s ease;\n}\n\n#submitBtn:active {\n  background-color: grey;\n}\n\n#submitBtn:hover,\n#searchBar:hover {\n  transform: translate(0, -2px);\n}\n\n.weatherInfoContainer:hover {\n  transform: translate(-50%, -61%);\n}\n\n#submitBtn > img {\n  filter: invert(100%);\n  padding: 0;\n  margin: 0;\n}\n\n/* weather info container */\n.iconImage {\n  width: 6rem;\n}\n\n.weatherInfoContainer {\n  position: absolute;\n  min-width: 420px;\n  max-width: 530px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -60%);\n  padding: 2rem;\n  border-radius: 2rem;\n  border: solid 2px black;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 3fr;\n  gap: 1rem;\n  transition:\n    transform 0.3s ease,\n    background-color 0.3s ease;\n}\n\n.weatherInfoContainer > .cityName {\n  grid-column: 1/-1;\n  text-align: center;\n}\n\n.leftPart {\n  display: grid;\n  align-items: top;\n  grid-template-rows: 30px 140px;\n  grid-template-columns: 1fr 2fr;\n}\n\n.leftPart > p {\n  display: flex;\n  font-weight: bold;\n  justify-content: center;\n  align-items: end;\n  font-size: 1.2rem;\n  grid-column: 1/-1;\n}\n\n.leftPart > img {\n  align-self: center;\n  width: 120px;\n  padding: 0.2rem;\n}\n\n.leftPart > div {\n  font-size: 1.35rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\nspan.temperature {\n  display: flex;\n}\n\n.rightPart {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 5px;\n}\n\n.rightPart > div {\n  border: solid 2px black;\n  font-weight: bold;\n  padding: 0.8rem 1.5rem;\n  display: flex;\n  justify-content: space-between;\n  border-radius: 1rem;\n}\n\n.conditions {\n  text-align: center;\n}\n\n/* loading */\n#loading{\n  font-size: 2rem;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/general.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;EAKE,SAAS;EACT,UAAU;EACV,yCAAyC;AAC3C;;AAEA;EACE,aAAa;EACb,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,YAAY;AACd;;AAEA,oBAAoB;AACpB;EACE,cAAc;EACd,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,OAAO;EACP,cAAc;EACd,eAAe;EACf,kBAAkB;EAClB,uBAAuB;EACvB,gBAAgB;EAChB,+BAA+B;AACjC;;AAEA;EACE,eAAe;EACf,uBAAuB;EACvB,sBAAsB;EACtB,kBAAkB;EAClB,UAAU;EACV,SAAS;EACT,mBAAmB;EACnB,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB;;8BAE4B;AAC9B;;AAEA;EACE,sBAAsB;AACxB;;AAEA;;EAEE,6BAA6B;AAC/B;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,oBAAoB;EACpB,UAAU;EACV,SAAS;AACX;;AAEA,2BAA2B;AAC3B;EACE,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,gBAAgB;EAChB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,aAAa;EACb,8BAA8B;EAC9B,2BAA2B;EAC3B,SAAS;EACT;;8BAE4B;AAC9B;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,8BAA8B;EAC9B,8BAA8B;AAChC;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,uBAAuB;EACvB,gBAAgB;EAChB,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,QAAQ;AACV;;AAEA;EACE,uBAAuB;EACvB,iBAAiB;EACjB,sBAAsB;EACtB,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB;;AAEA,YAAY;AACZ;EACE,eAAe;EACf,iBAAiB;EACjB,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB\",\"sourcesContent\":[\"body,\\nh1,\\nh2,\\nh3,\\np {\\n  margin: 0;\\n  padding: 0;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\nbody {\\n  height: 100vh;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.SearchBarDiv {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 10vh;\\n}\\n\\n/* the form itself */\\n.SearchBarDiv > form {\\n  min-width: 50%;\\n  display: flex;\\n  justify-content: space-around;\\n}\\n\\n#searchBar {\\n  flex: 1;\\n  max-width: 70%;\\n  padding: 0.5rem;\\n  border-radius: 8px;\\n  border: solid 2px black;\\n  min-width: 300px;\\n  transition: transform 0.3s ease;\\n}\\n\\n#submitBtn {\\n  cursor: pointer;\\n  border: solid 2px black;\\n  background-color: #fff;\\n  border-radius: 6px;\\n  padding: 0;\\n  margin: 0;\\n  min-height: 2.25rem;\\n  min-width: 2.25rem;\\n  display: flex;\\n  justify-content: center;\\n  transition:\\n    transform 0.3s ease,\\n    background-color 0.3s ease;\\n}\\n\\n#submitBtn:active {\\n  background-color: grey;\\n}\\n\\n#submitBtn:hover,\\n#searchBar:hover {\\n  transform: translate(0, -2px);\\n}\\n\\n.weatherInfoContainer:hover {\\n  transform: translate(-50%, -61%);\\n}\\n\\n#submitBtn > img {\\n  filter: invert(100%);\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n/* weather info container */\\n.iconImage {\\n  width: 6rem;\\n}\\n\\n.weatherInfoContainer {\\n  position: absolute;\\n  min-width: 420px;\\n  max-width: 530px;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -60%);\\n  padding: 2rem;\\n  border-radius: 2rem;\\n  border: solid 2px black;\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  grid-template-rows: 1fr 3fr;\\n  gap: 1rem;\\n  transition:\\n    transform 0.3s ease,\\n    background-color 0.3s ease;\\n}\\n\\n.weatherInfoContainer > .cityName {\\n  grid-column: 1/-1;\\n  text-align: center;\\n}\\n\\n.leftPart {\\n  display: grid;\\n  align-items: top;\\n  grid-template-rows: 30px 140px;\\n  grid-template-columns: 1fr 2fr;\\n}\\n\\n.leftPart > p {\\n  display: flex;\\n  font-weight: bold;\\n  justify-content: center;\\n  align-items: end;\\n  font-size: 1.2rem;\\n  grid-column: 1/-1;\\n}\\n\\n.leftPart > img {\\n  align-self: center;\\n  width: 120px;\\n  padding: 0.2rem;\\n}\\n\\n.leftPart > div {\\n  font-size: 1.35rem;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\nspan.temperature {\\n  display: flex;\\n}\\n\\n.rightPart {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  gap: 5px;\\n}\\n\\n.rightPart > div {\\n  border: solid 2px black;\\n  font-weight: bold;\\n  padding: 0.8rem 1.5rem;\\n  display: flex;\\n  justify-content: space-between;\\n  border-radius: 1rem;\\n}\\n\\n.conditions {\\n  text-align: center;\\n}\\n\\n/* loading */\\n#loading{\\n  font-size: 2rem;\\n  font-weight: bold;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./general.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./general.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","import { searchWeather, changeBackground } from \"./logic.js\";\nimport { format } from \"date-fns\";\nimport { findIcon } from \"./icons.js\";\nimport icons from \"./icons.js\";\n\nexport const createSearchForm = () => {\n  const div = Object.assign(document.createElement(\"div\"), {\n    className: \"SearchBarDiv\",\n  });\n  const form = Object.assign(document.createElement(\"form\"), {\n    action: \"#\",\n  });\n\n  const label = Object.assign(document.createElement(\"label\"), {\n    for: \"searchBar\",\n  });\n\n  const searchIcon = Object.assign(document.createElement(\"img\"), {\n    src: icons.search,\n  });\n  const input = Object.assign(document.createElement(\"input\"), {\n    type: \"text\",\n    name: \"searchBar\",\n    id: \"searchBar\",\n    pattern: \"[A-Za-z]+\",\n    placeholder: \"Search a City\",\n    required: true,\n  });\n  input.setAttribute(\"minlength\", \"3\");\n  input.setAttribute(\"maxlength\", \"35\");\n\n  const button = Object.assign(document.createElement(\"button\"), {\n    id: \"submitBtn\",\n    name: \"submitBtn\",\n  });\n  button.appendChild(searchIcon);\n\n  //handle the event listener for the submit btn\n  button.addEventListener(\"click\", async (e) => {\n    e.preventDefault();\n\n    let previous = document.querySelector(\".weatherInfoContainer\");\n    if (input.value) {\n      if (previous) {\n        previous.remove();\n      }\n\n      const loadingElement = document.createElement(\"div\");\n      loadingElement.innerText = \"Loading...\";\n      loadingElement.id = \"loading\";\n      document.body.appendChild(loadingElement);\n\n      setTimeout(() => {}, \"2000\"); //in order to display de loading text\n\n      try {\n        const weatherElement = await getWeather(input.value);\n        document.body.appendChild(weatherElement);\n      } catch (e) {\n        alert(\"Please try searching for a different city!\");\n        console.error(e);\n        return;\n      } finally {\n        document.body.removeChild(loadingElement);\n      }\n    }\n  });\n\n  form.appendChild(label);\n  form.appendChild(input);\n  form.appendChild(button);\n  div.appendChild(form);\n\n  return div;\n};\n\nconst createElement = (tag, className, text = \"\", src = \"\") => {\n  const element = document.createElement(tag);\n  if (className) element.className = className;\n  if (text) element.innerText = text;\n  if (src) element.src = src;\n  return element;\n};\n\nconst getWeather = async (formValue) => {\n  const info = await searchWeather(formValue);\n\n  const divContainer = createElement(\"div\", \"weatherInfoContainer\");\n  const leftDiv = createElement(\"div\", \"leftPart\");\n  const rightDiv = createElement(\"div\", \"rightPart\");\n\n  divContainer.append(\n    createElement(\"h1\", \"cityName\", info[0]),\n    leftDiv,\n    rightDiv,\n  );\n\n  let weather = document.createElement(\"div\");\n  let degrees = Object.assign(document.createElement(\"span\"), {\n    className: \"temperature\",\n  });\n  degrees.append(createElement(\"h1\", \"temp\", info[3]));\n  degrees.append(createElement(\"p\", \"a\", \"C\"));\n\n  weather.append(degrees, createElement(\"p\", \"conditions\", info[4]));\n  leftDiv.append(\n    createElement(\"p\", \"date\", format(new Date(), \"EEE, MMM d \")),\n    createElement(\"img\", \"iconImage\", \"\", findIcon(info[2])),\n    weather,\n  );\n\n  let rightInfo = [\"Humidity\", \"Visibility\", \"Wind\"];\n  let units = [\"%\", \"KM\", \"KPH\"];\n  rightInfo.forEach((e, index) => {\n    let div = document.createElement(\"div\");\n\n    if (info[5 + index] == null || info[5 + index] == 0) {\n      info[5 + index] = \"-\";\n    }\n\n    div.append(\n      createElement(\"span\", \"\", e),\n      createElement(\"span\", \"\", info[5 + index] + ` ${units[index]}`),\n    );\n    rightDiv.append(div);\n  });\n\n  divContainer.append(leftDiv, rightDiv);\n\n  return divContainer;\n};\n\nconst defaultWeather = await getWeather(\"Guadalajara\");\ndocument.body.appendChild(defaultWeather);\n\nexport default createSearchForm;\n","import wind from \"./icons/wind.svg\";\nimport thunder from \"./icons/thunder.svg\";\nimport thunderShowersNight from \"./icons/thunder-showers-night.svg\";\nimport thunderShowersDay from \"./icons/thunder-showers-day.svg\";\nimport thunderRain from \"./icons/thunder-rain.svg\";\nimport snow from \"./icons/snow.svg\";\nimport snowShowersNight from \"./icons/snow-showers-night.svg\";\nimport snowShowersDay from \"./icons/snow-showers-day.svg\";\nimport sleet from \"./icons/sleet.svg\";\nimport showersNight from \"./icons/showers-night.svg\";\nimport showersDay from \"./icons/showers-day.svg\";\nimport rain from \"./icons/rain.svg\";\nimport rainSnow from \"./icons/rain-snow.svg\";\nimport rainSnowShowersNight from \"./icons/rain-snow-showers-night.svg\";\nimport rainSnowShowersDay from \"./icons/rain-snow-showers-day.svg\";\nimport partlyCloudyNight from \"./icons/partly-cloudy-night.svg\";\nimport partlyCloudyDay from \"./icons/partly-cloudy-day.svg\";\nimport hail from \"./icons/hail.svg\";\nimport fog from \"./icons/fog.svg\";\nimport cloudy from \"./icons/cloudy.svg\";\nimport clearNight from \"./icons/clear-night.svg\";\nimport clearDay from \"./icons/clear-day.svg\";\nimport search from \"./icons/search.svg\";\n\nconst icons = {\n  wind,\n  thunder,\n  thunderShowersNight,\n  thunderShowersDay,\n  thunderRain,\n  snow,\n  snowShowersNight,\n  snowShowersDay,\n  sleet,\n  showersNight,\n  showersDay,\n  rain,\n  rainSnow,\n  rainSnowShowersNight,\n  rainSnowShowersDay,\n  partlyCloudyNight,\n  partlyCloudyDay,\n  hail,\n  fog,\n  cloudy,\n  clearNight,\n  clearDay,\n  search,\n};\n\nexport const findIcon = (iconName) => {\n  const formattedString = iconName\n    .split(\"-\")\n    .map((word, index) =>\n      index === 0 ? word : word.charAt(0).toUpperCase() + word.slice(1),\n    )\n    .join(\"\");\n\n  return icons[formattedString];\n};\n\nexport default icons;\n","import \"./general.css\";\nimport createSearchForm from \"./GUI\";\n\nconst loadGUI = () => {\n  const searchBar = document.body.appendChild(createSearchForm());\n};\n\nloadGUI();\n","//This module contains the functions that take care of fetching and loading data both from Unsplash and visualCrossing\n\n//Unplash\nexport const changeBackground = async (background, search, index) => {\n  const image = await searchImage(search, index);\n  background.src = image;\n};\n\nexport default changeBackground;\n\nconst searchImage = async (search, index) => {\n  const response = await fetch(\n    `https://api.unsplash.com/search/photos?query=${search}&client_id=LTwuJxAgrhNFWOpd9BBr7EWyr6YTPtUdvnsBPr-pI3Y`,\n    { mode: \"cors\" },\n  );\n  const images = await response.json();\n  return images.results[index].urls.regular;\n};\n\n//visualCrossing\nexport const searchWeather = async (search) => {\n  try {\n    const response = await fetch(\n      `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${search}?unitGroup=metric&key=REB796NNBGFXYLXEKXHT5UNLX&contentType=json`,\n      { mode: \"cors\" },\n    );\n    const data = await response.json();\n    const info = [\n      data.resolvedAddress,\n      data.days[0].datetime,\n      data.currentConditions.icon,\n      data.currentConditions.temp,\n      data.currentConditions.conditions,\n      data.currentConditions.humidity,\n      data.currentConditions.visibility,\n      data.currentConditions.windspeed,\n    ];\n    console.log(info);\n    return info;\n  } catch (e) {\n    console.error(e);\n    return;\n  }\n};\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(44);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","attributes","styleElement","nonce","setAttribute","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","createSearchForm","div","Object","assign","className","form","action","label","for","searchIcon","src","search","input","type","name","pattern","placeholder","required","button","addEventListener","async","preventDefault","previous","value","loadingElement","innerText","body","setTimeout","weatherElement","getWeather","alert","console","error","tag","text","formValue","info","divContainer","leftDiv","rightDiv","append","weather","degrees","Date","units","forEach","defaultWeather","icons","wind","thunder","thunderShowersNight","thunderShowersDay","thunderRain","snow","snowShowersNight","snowShowersDay","sleet","showersNight","showersDay","rain","rainSnow","rainSnowShowersNight","rainSnowShowersDay","partlyCloudyNight","partlyCloudyDay","hail","fog","cloudy","clearNight","clearDay","findIcon","iconName","formattedString","split","word","charAt","toUpperCase","slice","searchWeather","response","fetch","mode","json","resolvedAddress","days","datetime","currentConditions","icon","temp","conditions","humidity","visibility","windspeed","log","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","array","test","findIndex","object","prototype","hasOwnProperty","call","findKey","valueCallback","rest","enUS","code","formatDistance","token","tokenValue","replace","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","constructFromSymbol","Symbol","constructFrom","constructor","toDate","argument","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","startOfDay","in","setHours","getDayOfYear","laterDate","earlierDate","laterDate_","earlierDate_","dates","normalize","bind","find","normalizeDates","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","round","differenceInCalendarDays","date_","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","h","H","m","s","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","timeLongFormatter","longFormatters","p","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","formatStr","originalDate","RangeError","parts","substring","firstCharacter","longFormatter","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","_message","subject","message","warn","includes","warnOrThrowProtectedError","formatter","matched","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","queue","fn","r","hasAwait","currentDeps","outerResolve","reject","depQueues","Set","promise","Promise","resolve","rej","deps","dep","then","ret","wrapDeps","getResult","fnQueue","has","add","err","n","getter","__esModule","definition","o","defineProperty","enumerable","get","g","globalThis","Function","prop","scriptUrl","importScripts","location","currentScript","tagName","scripts","getElementsByTagName","nc"],"sourceRoot":""}